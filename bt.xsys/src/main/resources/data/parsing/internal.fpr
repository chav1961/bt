% ---------------------------------------------------------------------------- :
%                                                                              :
%       Система автоматизированного проектирования программного обеспечения    :
% для различных систем программирования с ЕЯИ-вводом.      (GSERV204)          :
%                                                                              :
%       Словарь обработки общего описания системы без алгоритмов.              :
%                                                                              :
%       Словарь содержит схемы внутренних преобразований предикатов.           :
%                                                                              :
%                                                                              :
%       (с) 1995г, А.В.Черномырдин, (3511-37-83-26).                           :
%       Версия 2.00 от 01.05.95.                                               :
%                                                                              :
% ---------------------------------------------------------------------------- :

% ---------------------------------------------------------------------------- :
%                                                                              :
%       Внутренние правила обработки входной информации.                       :
%                                                                              :
% ---------------------------------------------------------------------------- :

internal.

%
%       Правила инверсии списка связей.
%

        [inv_link(X1,X2,X3,X4), inv(X4,X5)] ::= [del(inv_link(X1,X2,X3,X4)), add(link(X1,X2,X3,X5))].

%
%       Правила формирования названия для уровня.
%

        [not(word(_,recv(_,_,$LEVEL$,char(1,1),none),$Уровень$))] ::= [add(word(_,recv(_,_,$LEVEL$,char(1,1),none),$Уровень$))].

%
%       Правила дополнения описанием единственного АРМа.
%

        [not(arm(_,_))] ::= [add(arm(main,$ГОЛОВНОЙ АРМ СИСТЕМЫ$)), add(access(main,_,[sel, ins, rep, del])), add(access(main,_))].


%
%       Правила построения групп баз данных.
%

        % Построение групп файлов, являющихся единым документом.
        [doc(Doc,_,_), not(under(_,Doc)), not(group(Doc,_))] ::= [add(group(Doc,[Doc]))].
        [group(Doc,List), under(NewDoc,Next), in_list(NewDoc,List), not(in_list(Next,List))]
                ::= [del(group(Doc,List)), add(group(Doc,[Next | List]))].

        % Построение групп файлов для выдачи функциональных задач.
        [main_link(Form,Doc), not(f_group(Form,_))] ::= [add(f_group(Form,[Doc]))].
        [f_group(Doc,List), link(Doc,Doc1,Doc2,_), in_list(Doc1,List), not(in_list(Doc2,List))]
                ::= [del(f_group(Doc,List)), add(f_group(Doc,[Doc2 | List]))].

        % Построение списка индексов по каждым документам.
        [recv(Doc,k,Name,_,_), not(index(Doc,_,_))] ::= [add(index(Doc,[],[]))].
        [recv(Doc,k,Name,char(_,_),_), index(Doc,Expr,List), not(in_list(Name,List))] ::=
                    [del(index(Doc,Expr,List)), add(index(Doc,[$+$, Doc, $->$, Name | Expr],[Name | List]))].
        [recv(Doc,k,Name,digit(_,_),_), index(Doc,Expr,List), not(in_list(Name,List))] ::=
                    [del(index(Doc,Expr,List)), add(index(Doc,[$+str($, Doc, $->$, Name, $)$ | Expr],[Name | List]))].
        [recv(Doc,k,Name,date,_), index(Doc,Expr,List), not(in_list(Name,List))] ::=
                    [del(index(Doc,Expr,List)), add(index(Doc,[$+dtos($, Doc, $->$, Name, $)$ | Expr],[Name | List]))].
        [recv(Doc,k,Name,time,_), index(Doc,Expr,List), not(in_list(Name,List))] ::=
                    [del(index(Doc,Expr,List)), add(index(Doc,[$+str($, Doc, $->$, Name, $)$ | Expr],[Name | List]))].
        [recv(Doc,k,Name,boolean,_), index(Doc,Expr,List), not(in_list(Name,List))] ::=
                    [del(index(Doc,Expr,List)), add(index(Doc,[$+iif($, Doc, $->$, Name, $,"T","F")$ | Expr],[Name | List]))].

%
%       Правила определения глубины иерархии документов (будет на 1 больше реального).
%

        [recv(Doc,l(1),Recv,_,_), not(maxLevel(Doc,_))] ::= [add(maxLevel(Doc,[1,2,3,4,5,6,7,8,9])), add(recv(Doc,k,$LEVEL$,char(1,1),none)), add(word([[`У, `р, `о, `в |_]],recv(Doc,l(0),$LEVEL$,char(1,1),none),"Ууровень"))].
        [maxLevel(Doc,[Level | Tail]), recv(Doc,l(Level),Recv,_,_)] ::= [del(maxLevel(Doc,[Level | Tail])), add(maxLevel(Doc,Tail))].
