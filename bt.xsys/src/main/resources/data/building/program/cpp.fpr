% ---------------------------------------------------------------------------- :
%                                                                              :
%       Система автоматизированного проектирования программного обеспечения    :
% для различных систем программирования с ЕЯИ-вводом.      (GSERV205)          :
%                                                                              :
%       Правила генерации программ в среде Window-95/Microsoft C++.            :
%       Общая часть.                                                           :
%                                                                              :
%                                                                              :
%       (с) 2000г, А.В.Черномырдин, (3513-35-24-65 аб 1326).                   :
%       Версия 1.00 от 01.04.2000.                                             :
%                                                                              :
% ---------------------------------------------------------------------------- :

generate.

% ---------------------------------------------------------------------------- :
%                                                                              :
%       Правила генерации программ АРМа.                                       :
%                                                                              :
% ---------------------------------------------------------------------------- :

        % Общий порядок генерации программы.
[make(program)] : bagof(arm(Name,Text),arm(Name,Text),ArmList) ::= [make(program,ArmList)].

[make(program,[])] ::= [].
[make_arm(_), not(make_arm(Name))] ??
[make(program,[arm(Name,Text) | T])] ::= [make(program,T)].
[make(program,[arm(Name,Text) | T])] ::=
                    [make(h_file,Name,Text),
                     make(main_module,Name,Text),
                     make(resource_h,Name,Text),
                     make(script_rc,Name,Text),
                     make(ini,Name,Text),
                     make(program,T)].

% *****************************************************************************

        % Генерация файла объявлений.
        [make(h_file,Name,Text)] : get(system(Sys,SysText)) ::=
                [file($.\target\$,Sys,h),
                 $//$, nl,
                 $//           Система $, txt(Sys), $ - $, txt(SysText), nl,
                 $//           АРМ $, txt(Text), nl,
                 $// (c) 2000, А.В. Черномырдин$,  nl,
                 $//$, 3 * nl,
                 hdr_docclass(Sys,Text),
                 hdr_taskclass(Sys,Text),
                 hdr_setupclass(Sys,Text),
                 hdr_mainwindowclass(Sys,Text),
                 hdr_applicationclass(Sys,Text)
                ].

        % Генерация описания документов.
        [hdr_docclass(Name,Text)] : get(arm(ArmName,_)) ::=
                [$class $, txt(Name), $_Window;$, 2 * nl,
                 $class $, txt(Name), $_DropCtrl : public CDropCtrl$, nl,
                 tab, $// Класс панели инструментов.$, nl,
                 ${public :$, nl,
                 tab, txt(Name), $_DropCtrl(CWnd *Parent,LPSTR Sect) : CDropCtrl(Parent,Sect){};$, nl,
                 tab, $long$, tab, $Drop(pDDD Ref);$, nl,
                 tab, $afx_msg void$, tab, $OnInitMenuPopup(CMenu *Menu,UINT Index,BOOL bSysMenu);$, nl,
                 tab, $DECLARE_MESSAGE_MAP()$, nl,
                 $};$, 3 * nl,
                 $//$, nl, $//$, nl, $//$, tab, $Группа документов системы$, nl, $//$, nl, $//$, 2 * nl,
                 hdr_docclasslist(Name,Text)
                ].

        % Генерация описания задач.
        [hdr_taskclass(Name,Text)] : get(arm(ArmName,_)) ::=
                [$//$, nl, $//$, nl, $//$, tab, $Группа задач системы$, nl, $//$, nl, $//$, 2 * nl,
                 hdr_taskclasslist(Name,Text)
                ].

        % Генерация окна настроек.
        [hdr_setupclass(Name,Text)] : get(arm(ArmName,_)) ::=
                [$//$, nl, $//$, nl, $//$, tab, $Окно настройки системы$, nl, $//$, nl, $//$, 2 * nl,
                 $// $, 80 * txt($-$), 2 * nl,
                 $class H_PARM_Cadre : public NoteWindow$, nl,
                 tab, $// Класс окна-блокнота для установки параметров системы.$, nl,
                 ${public :$, nl,
                 tab, $H_PARM_Cadre() : NoteWindow(){};$, nl,
                 tab, $H_PARM_Cadre(LPSTR Header,CWnd *Parent,LPSTR Sect) : NoteWindow(Header,Parent,Sect){};$, nl,
                 tab, $int$, tab, $One(DBServer *Server,LPSTR Column,long RecId,DBField *NewVal,DBField *OldVal);$, nl,
                 tab, $int$, tab, $All(DBServer *Server,AllMode AM,long RecId);$, nl,
                 $};$, 3 * nl
                ].

        % Генерация головного окна.
        [hdr_mainwindowclass(Name,Text)] : get(arm(ArmName,_)) ::=
                [$//$, nl, $//$, nl, $//$, tab, $Головное окно системы$, nl, $//$, nl, $//$, 2 * nl,
                 $// $, 80 * txt($-$), 2 * nl,
                 $class $, txt(Name), $_Window : public MainWindow$, nl,
                 tab, $// Класс головного окна системы.$, nl,
                 ${public :$, nl,
                 tab, txt(Name), $_DropCtrl$, tab, $*TB;$, nl,
                 tab, txt(Name), $_Window(LPSTR Sect,LPSTR Caption,LPSTR Menu) : MainWindow(Sect,Caption,Menu){Prepare();};$, nl,
                 hdr_menuitems(Name,Text),
                 tab, $afx_msg void$, tab, $About();$, nl,
                 tab, $afx_msg void$, tab, $OnAdmSetup();$, nl,
                 tab, $afx_msg void$, tab, $OnAdmDiagnostics();$, nl,
                 tab, $afx_msg void$, tab, $OnClose();$, nl,
                 tab, $afx_msg void$, tab, $CloseWindows(bool Mode=true);$, nl,
                 hdr_friendclasses(Name,Text),
                 tab, $DECLARE_MESSAGE_MAP()$, nl,
                 $protected :$, nl,
                 hdr_docwindows(Name,Text),
                 tab, $bool$, tab, $Activated;$, nl,
                 tab, $void$, tab, $Prepare();$, nl,
                 $};$, 2 * nl
                ].

        % Генерация собственно приложения.
        [hdr_applicationclass(Name,Text)] : get(arm(ArmName,_)) ::=
                [$//$, nl, $//$, nl, $//$, tab, $Класс приложения системы$, nl, $//$, nl, $//$, 2 * nl,
                 $// $, 80 * txt($-$), 2 * nl,
                 $class $, txt(Name), $_Application : public MainApp$, nl,
                 tab, $// Класс приложения системы.$, nl,
                 ${public :$, nl,
                 tab, $BOOL$, tab, $InitInstance();$, nl,
                 $};$, 2 * nl,
                 $extern $, txt(Name), $_Application$, tab, $App;$, 2 * nl
                ].

% *****************************************************************************

        % Генерация исходных модулей.
        [make(main_module,Name,Text)] : get(system(Sys,SysText)) ::=
                [file($.\target\$,doc,cpp),
                 make_prefix_module(Sys,SysText),
                 make_toolbar_module(Sys,SysText),
                 make_doc_module(Sys,SysText),
                 file($.\target\$,task,cpp),
                 make_prefix_module(Sys,SysText),
                 make_task_module(Sys,SysText),
                 file($.\target\$,main,cpp),
                 make_prefix_module(Sys,SysText),
                 $#include$, tab, $"..\\..\\32bit service\\Show Tools\\Show Tools.h"$, nl,
                 $#include$, tab, $"..\\..\\32bit service\\Show Tools\\Show Tools_i.c"$, nl,
                 make_setup_module(Sys,SysText),
                 make_diagnostics_module(Sys,SysText),
                 make_main_module(Sys,SysText)
                ].

        [make_prefix_module(Sys,SysText)] ::=
                [$//$, nl,
                 $//           Система $, txt(Sys), $ - $, txt(SysText), nl,
                 $// (c) 2000, А.В. Черномырдин$,  nl,
                 $//$, 3 * nl,
                 $#include$, tab, $"afxwin.h"$, nl,
                 $#include$, tab, $"afxext.h"$, nl,
                 $#include$, tab, $"afxdlgs.h"$, nl,
                 $#include$, tab, $"afxdisp.h"$, nl,
                 $#include$, tab, $"afx.h"$, nl,
                 $#include$, tab, $"afxole.h"$, nl,
                 $#include$, tab, $"afxcmn.h"$, nl,
                 $#include$, tab, $"afxcview.h"$, nl,
                 $#include$, tab, $"afxdao.h"$, nl,
                 $#include$, tab, $"resource.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Внешние объявления.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Служебные классы и функции.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Окно-панель инструментов.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Головное окно системы.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Окна-клиенты.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Серверы БД.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Интерпретатор выражений.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Функциональные задачи.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Хитрое окно для универсального окна.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Универсальное окно.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Окна-диалоги и окна-мастера.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Класс приложения системы.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Функции периода выполнения.h"$, nl,
                 $#include$, tab, $"..\\..\\32битный сервис\\32битный сервис\\Окно запроса параметров.h"$, nl,
                 $#include$, tab, $"$, txt(Sys), $.h"$, 2 * nl
                ].
