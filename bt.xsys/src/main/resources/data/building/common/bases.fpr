% ---------------------------------------------------------------------------- :
%                                                                              :
%       Система автоматизированного проектирования программного обеспечения    :
% для различных систем программирования с ЕЯИ-вводом.      (GSERV205)          :
%                                                                              :
%       Правила генерации баз данных для подсистемы администратора БД.         :
%                                                                              :
%                                                                              :
%       (с) 1996г, А.В.Черномырдин, (3511-37-83-26).                           :
%       Версия 2.10 от 01.05.96.                                               :
%                                                                              :
% ---------------------------------------------------------------------------- :

generate.

% ---------------------------------------------------------------------------- :
%                                                                              :
%       Подсистема генерации файла конфигурации БД.                            :
%                                                                              :
% ---------------------------------------------------------------------------- :

        % Общее правило построения таблиц баз данных
[make(database)] : [bagof(doc(Name,Text,Type),doc(Name,Text,Type),DocList),
                    get(system(SName,STxt))] ::=
                [file($.\target\system\$,SName,cnf),
                 $[SYSTEM]$, nl,                $Global=;.\;$, nl,
                 $Printer=local$, nl,           $TV=color$, nl,
                 $PrinterType=EPSON$, nl,       $ProgId=$, txt(SName), nl,
                 $ProgName=$, txt(STxt), nl,    $Header=ЗАМЕНИТЬ ПРИ КООРЕКТИРОВКЕ !!!$, nl,
                 $View=wpview.exe$, nl,         $Index_Path=.\$, nl,
                 $UserName=Supervisor$, nl,     $Server=Main_Server$, nl,
                 $NetworkDisk=SYS:$, nl,        db1($NSI=$,DocList,nsi), nl,
                 db1($Bases=$,DocList,oper),    nl,
                 db2(DocList,nsi),              db2(DocList,oper)
                ].


        % Правила построения списка НСИ и БД системы.
        [db1(_,[],_)] ::= [].
        [db1(Pref,[doc(Doc,_,Type) | T],Type)] ::=
                [txt(Pref), txt(Doc), db1($,$,T,Type)].
        [db1(Pref,[_ | T],Type)] ::= [db1(Pref,T,Type)].


        % Правила описания одной базы данных.
        [db2([],_)] ::= [].
        [db2([doc(Doc,Name,Type) | T],Type)] ::=
                [$[$, txt(Doc), $]$, nl,
                 $Header=$, txt(Name), nl,
                 db_f(Doc), db_i(Doc),
                 db2(T,Type)
                ].
        [db2([_ | T],Type)] ::= [db2(T,Type)].


        % Правила построения списка полей БД.
        [db_f(Doc)] : bagof(recv(Doc,Type,Name,Chars,From),recv(Doc,Type,Name,Chars,From),RecvList) ::=
                [db_f(1,RecvList)].

        [db_f(_,[])] ::= [].
[NewCount is Count + 1] ??
        [db_f(Count,[recv(_,_,Name,char(Len,Mid),_) | T])] : get(word(_,recv(_,_,Name,char(Len,Mid),_),Text)) ::=
                [$Field$, Count, $=$, txt(Name), $/$, Text, $:c$, Len, $/$, Mid, nl, db_f(NewCount,T)].
[NewCount is Count + 1] ??
        [db_f(Count,[recv(_,_,Name,digit(Len,Dec),_) | T])] : get(word(_,recv(_,_,Name,digit(Len,Dec),_),Text)) ::=
                [$Field$, Count, $=$, txt(Name), $/$, Text, $:n$, Len, $.$, Dec, $/$, Len, nl, db_f(NewCount,T)].
[NewCount is Count + 1] ??
        [db_f(Count,[recv(_,_,Name,date,_) | T])] : get(word(_,recv(_,_,Name,date,_),Text)) ::=
                [$Field$, Count, $=$, txt(Name), $/$, Text, $:d8/8$, nl, db_f(NewCount,T)].
[NewCount is Count + 1] ??
        [db_f(Count,[recv(_,_,Name,time,_) | T])] : get(word(_,recv(_,_,Name,time,_),Text)) ::=
                [$Field$, Count, $=$, txt(Name), $/$, Text, $:t5/5$, nl, db_f(NewCount,T)].
[NewCount is Count + 1] ??
        [db_f(Count,[recv(_,_,Name,boolean,_) | T])] : get(word(_,recv(_,_,Name,boolean,_),Text)) ::=
                [$Field$, Count, $=$, txt(Name), $/$, Text, $:l1/1$, nl, db_f(NewCount,T)].


        % Правила поcтроения списка индексов.
[index(Doc,_,_)] ??
        [db_i(Doc)] : bagof(index(Doc,Indexes,None),index(Doc,Indexes,None),IndexList) ::=
                [db_i(1,IndexList)].
        [db_i(_)] ::= [].

        [db_i(_,[])] ::= [].
[NewCount is Count + 1, concat(Expr,Ready), list_text([_ | Text],Ready), list_text(Text,E_Expr)] ??
        [db_i(Count,[index(Name,Expr,_) | T])] ::=
                [$Index$, Count, $=$, txt(Name), $:$, txt(E_Expr), nl,
                 $Header$, Count, $=$, txt(Name), nl,
                 db_i(NewCount,T)
                ].
